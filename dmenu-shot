#!/bin/sh
#  ____     _ 
# |  _ \   | |
# | |_) |  | |
# |  __/ |_| |
# |_|   \___/ 
#             

# sent notification {{{
notify() {
	case $3 in
		1) mode=low ;;
		2) mode=normal ;;
		3) mode=critical ;;
		*) mode=normal ;;
	esac

	notify-send -u ${mode} -a ${prompt} \
		-i accessories-screenshot "${1} [${$}]" "${2}"

	if [ -z "${2}" ]; then
		printf '%s\n' "${1}"
	else
		printf '%s: %s\n' "${1}" "${2}"
	fi
}
# }}}
# variables {{{
pached=$(dmenu -v | grep -c 'hos-patched')
# if [ ${pached} -eq 1 ]; then
# 	patches='-c -g 2 -bw 2 -l 2 -r'
# fi

directory="${HOME}/pictures/screenshots"
stamp=$(date '+%y%m%d_%H%M%S')
name="${directory}/shot-${stamp}.png"
prompt='dmenu-shot'
runner="dmenu \
		-p ${prompt} \
		-i \
		${patches} \
		${@} \
		"

# main choice
choice=$(printf '%s\n' \
	"whole screen" "active window" "select area" "quit" \
		| ${runner} \
		| awk '{print $1}')

if [ -z "${choice}" ]; then
	notify "Shot cancelled" '' 1
	exit 0
fi

quality="9"
shooter="maim -B --hidecursor -m ${quality}"
#execarg="mv \$f ${directory}/; nsxiv ${directory}/\$f & printf ${directory}/\$f | xclip -selection c "
# }}}

# main {{{
if [ ! -d "${directory}" ]; then
	mkdir -p "${directory}"
fi

case ${choice} in
	quit)
		exit 0
		;;
	whole)
		# # scrot (broken for dual-monitor) {{{
		# 	Monitor=":0.0+0,1080"
		# 	${scrot} -p ${quality} \
		# 	${mon} 'shots-%y%m%d_%H%M%S_$wx$h.png' \
		# 	-e "mv \$f ${directory}/; r.sh nsxiv ${directory}/\$f; printf ${directory}/\$f | xclip -selection c "
		# # }}}
		# # vars {{{
		# DemResTmp=$(xdpyinfo | grep dimensions | awk '{print $2;}')
		# DemResX=$(echo "${DemResTmp}" | sed 's/x.*//')
		# DemResY=$(echo "${DemResTmp}" | sed -e 's/.*x//' -e 's/$/ \/ 2/' | bc)
		#
		# monitor=$(printf '%s\n' '↓' '↑' '↕' '→' \
		# 		| ${runner} -p monitor)
		#
		# case ${monitor} in
		# 	'↑') DemRes="-geometry ${DemResX}x${DemResY}+0+0" ;;
		# 	'↓') DemRes="-crop ${DemResX}x${DemResY}+0+${DemResY}" ;;
		# 	'↕') DemRes="-geometry ${DemResTmp}" ;;
		# 	'—') notify "Shot cancelled" '' 1; exit 0; ;;
		# 	*) notify "Shot cancelled" '' 1; exit 1; ;;
		# esac
		# # }}}
		# ${shooter} ${DemRes} ${name}
		import -screen -window root ${name}
		;;
	active)
		import -screen -window $(xdotool getactivewindow) ${name}
		;;
	select)
		import ${name}
		;;
	*)
		notify "Shot cancelled" '' 1
		exit 1
		;;
esac

if [ -f "${name}" ]; then
	notify "Screenshot taken" "${name}"
	echo "${name}" | tr -d '\n' | xclip -selection clipboard
	short_name=$(echo "${name}" | xargs basename)
	do_open=$(echo "No\nYes" | dmenu -p "Open ${short_name}?" -i)
	[ "${do_open}" = 'Yes' ] && nsxiv "${name}"
else
	notify "Shot cancelled" \
		'By keystroke or right-click' 1
fi

#tocopy=$(printf '%s\n' "image" "path" | ${runner} -l 1)
#case ${tocopy} in
#	image)
#		cat ${name} | xclip -selection clipboard"
#		;;
#	path)
#		echo ${name} | tr -d '\n' | xclip -selection clipboard
#		;;
#	*)
#		printf '%s' ${name} | xclip -selection clipboard
#		;;
#esac

# }}}
