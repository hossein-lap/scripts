#!/bin/sh
#  ____     _ 
# |  _ \   | |
# | |_) |  | |
# |  __/ |_| |
# |_|   \___/ 
#             

kill -38 $(pidof dwmblocks) 2>/dev/null

# variables {{{
patched=$(dmenu -v | grep -c 'hos-patched')
if [ ${patched} -eq 1 ]; then
	patches='-c -bw 2 -i'
fi
prompt='kill'
# }}}
# launcher {{{
runner="dmenu -l 25 -p ${prompt} ${patches} ${@}"
# }}}
# notification function {{{
notify() {
	case ${2} in
		1) mode=low ;;
		2) mode=normal ;;
		3) mode=critical ;;
		*) mode=normal ;;
	esac

	if [ "${style}" = 'tui' ]; then
		printf "${prompt}: ${1}\n"
	elif [ -z "${DISPLAY}" ]; then
		echo "${@}" >/dev/null 2>&1
	else
		notify-send -i utilities-system-monitor \
			-a ${prompt} \
			-u ${mode} \
			"${1}" 2>/dev/null
		printf "${prompt}: ${1}\n"
	fi
}
# }}}

#		| sed 's/  \\_ /  • /' \
#		| sed 's/• -/• /' \

list=$( \
	ps --cols 120 axo pid,%mem,%cpu,user,cmd k %cpu \
		| grep -v '\[.*\]$' \
		| ${runner} \
		| awk '{print $1;}'

#		| sed 's/  \\_ /  ├─ /' \
#		| sed 's/|  /│  /g' \
#		| sed 's/├─ -/├─ /' \

	)

if [ "${list}" = 'PID' ] || [ -z "${list}" ]; then
	notify 'Canceled' 1
	exit 0
else
	thesig=$(printf '%s\n' \
		"15   SIGTERM   Terminate  " \
		"9    SIGKILL   Kill (Not Safe)" \
		"1    SIGHUP    Hangup detected" \
		"2    SIGINT    Interrupt  " \
		"3    SIGQUIT   Quit       " \
		| ${runner} \
		| awk '{print $1;}')

	if [ -z "${thesig}" ]; then
		notify 'Canceled' 1
		exit 0
	elif [ $(echo ${thesig} | grep -c '«Signals»') -gt 0 ]; then
		notify 'Title selected' 1
		exit 1
	else
		kill="kill -s ${thesig}"
	fi

	for i in ${list}; do
		${kill} "${i}"
		if [ -z $(pgrep ${i} 2>/dev/null) ]; then
			notify "Process [${i}] killed (signal ${thesig})"
		else
			notify "[${i}] Termination failed" 3
		fi
	done
fi
