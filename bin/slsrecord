#!/bin/sh
#  ____     _ 
# |  _ \   | |
# | |_) |  | |
# |  __/ |_| |
# |_|   \___/ 
#             

# timestamp {{{
timestamp() {
	process_name="${1}"

	pid=$(ps aux | grep '\<ffmpeg\>' | grep "${HOME}/videos/screen-record" | awk '{print $2;}')

	if [ -n "${pid}" ]; then
		start_time=$(ps -p ${pid} -o lstart=)
		elapsed=$(ps -p ${pid} -o etimes=)

		hours=$(echo "${elapsed} / 3600" | bc)
		minutes=$(echo "${elapsed} % 3600 / 60" | bc)
		seconds=$(echo "${elapsed} % 60" | bc)

		elapsed_formatted=$(printf "%02d:%02d:%02d" ${hours} ${minutes} ${seconds})

		printf '%s' "${elapsed_formatted}"
	else
		printf '%s' ""
	fi
}
# }}}

# screen_record using ffmpeg {{{
screen_record() {
	ffmpeg_recordcount=$(ps aux | grep '\<ffmpeg\>' | grep "${HOME}/videos/screen-record" -c)
	if [ "${ffmpeg_recordcount}" -eq 1 ]; then
		ffmpeg_record=$(printf 'rec(%s)' $(timestamp ffmpeg))
	elif [ "${ffmpeg_recordcount}" -gt 1 ]; then
		ffmpeg_record="rec(${ffmpeg_recordcount}) "
	else
		# notify-send -u normal "simple test is here"
		ffmpeg_record="â™¦"
	fi

	printf '%s' ${ffmpeg_record}
}
# }}}

screen_record
