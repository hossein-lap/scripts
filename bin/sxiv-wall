#!/bin/bash
#  ____     _ 
# |  _ \   | |
# | |_) |  | |
# |  __/ |_| |
# |_|   \___/ 
#             

defpicdir="${HOME}/pictures"
presist_wall="${HOME}/.local/share/dwm/background"
#script_name=$(echo ${0} | awk -F '/' '{print $NF;}')
script_name="Wallpaper"
runner="xwallpaper --zoom"
# runner="xwallpaper --no-randr --zoom"
pached=$(dmenu -v | grep -c 'hos-patched')
if [ ${pached} -eq 1 ]; then
	patches='-c -g 1 -bw 2 -i'
fi
menu="dmenu -l 20 -p ${script_name} ${patches}"
# viewer="nsxiv -torf"
viewer="sxiv -torf"

help() {
cat << EOF
usage: ${script_name} [img] [dir] [-s <dir>] [-h] []
	-r             rerun the xwallpaper command
	-h             print this message
	-s <dir>       random pic from <dir> as wallpaper
	-f <img>       set the image as wallpaper
	-d <dir>       show all the pictures from directory to choose from
	<no args>      choose a picture from "${defpicdir}"
EOF
}

notif_send() {
	if [ ${?} -eq 0 ]; then
		notify-send -u normal -a ${script_name} -i background "${1}" "${2}"
	fi
}

wall_set() {
	if [ -r "${1}" ]; then
		ww="$(echo "${1}" | awk -F '/' '{print $NF;}')"
		${runner} "${1}"
		if [ -z "${2}" ]; then
			cp -fv "${1}" ${presist_wall}
		fi
		wal -c
		wal -n -s -i "${presist_wall}"
		xrdb ~/.Xresources
		cat ~/.config/dunst/dunstrc.tmp ~/.cache/wal/dunstrc > ~/.config/dunst/dunstrc.dwm
		kill `pidof dunst` || echo 1
		st-wall tmp
		dunst & disown
		notif_send "Wallpaper changed" "${ww}"
		for i in $(pidof st tabbed); do kill -s USR1 "${i}" || echo "${i}"; done
		exit 0
	else
		exit 1
	fi
}

shuf_wall() {
	thewall=$(ls "${1}"/*.{jpg,png} | shuf | head -1)
	wall_set "${thewall}"
	ww="$(echo "${thewall}" | awk -F '/' '{print $NF;}')"
	if [ $? -eq 0 ]; then
		notif_send "Wallpaper changed" "${ww}"
		exit 0
	else
		exit 1
	fi
}

dir_wall() {
	thewall=$(${viewer} "${1}")
	if [ -f "${thewall}" ]; then
		wall_set "${thewall}"
		ww="$(echo "${thewall}" | awk -F '/' '{print $NF;}')"
		if [ $? -eq 0 ]; then
			notif_send "Wallpaper changed" "${ww}"
			exit 0
		else
			exit 1
		fi
	fi
}

dir_wall_intractive() {
	thewall=$(${viewer} "${1}")
	if [ -f "${thewall}" ]; then
		wall_set "${thewall}"
		if [ $? -eq 0 ]; then
			cp -f "${thewall}" ${presist_wall}
			ww="$(echo "${thewall}" | awk -F '/' '{print $NF;}')"
			notif_send "Wallpaper changed" "${ww}"
			exit 0
		else
			exit 1
		fi
	elif [ -z "${thewall}" ]; then
		choose_wall
	fi
}

choose_wall() {
	locwalldir="${defpicdir}/wall"
	selected_dir="$(find ${locwalldir} -maxdepth 1 -type d \
		| awk -F '/' '{print $NF;}' \
		| sed 's/wall$/./' \
		| ${menu})"
	if [ "${locwalldir}/${selected_dir}" = "${locwalldir}/" ]; then
		exit 2
	else
		dir_wall_intractive "${locwalldir}/${selected_dir}"
	fi
#	wall_set "${wall}"
}

#if [ "${1}" = '-h' ]; then
#	help
#	exit 0
#elif [ "${1}" = '-s' ]; then
#	shuf_wall "${2}"
#elif [ "${1}" = '-r' ]; then
#	${runner} ${presist_wall}
#elif [ -d "${1}" ]; then
#	dir_wall ${1}
#elif [ -f "${1}" ]; then
#	wall_set "${1}"
#else
#	choose_wall
#fi

# start {{{
case "${1}" in
	-h) help; exit 0 ;;
	-s) shuf_wall "${2}" ;;
	-r) wall_set ${presist_wall} ;;
	-d) dir_wall "${2}" ;;
	-f) wall_set "${2}" ;;
	*) choose_wall ;;
esac
# }}}
