#!/usr/bin/env perl
use strict;
use warnings;

# Define the fzf runner and arguments
my $runner = 'fzf';
my $args = '--color -1 -i --no-unicode --prompt=: --info=inline --header-first --header tmux-sessions --height 10% --reverse';

# Main function to set the git user configuration
sub set_user {
    my @options = qw(pers-hos pers-pj work-hos work-pj);
    
    # Capture the user choice from fzf
    my $choice = capture_fzf_selection(\@options, 'git user/email config');

    # Process the choice and update git config
    if ($choice eq 'pers-pj') {
        update_git_config('pers-pj', 'primejade', 'primejade@proton.me');
    }
    elsif ($choice eq 'pers-hos') {
        update_git_config('pers-hos', 'Hossein Esmail', 'hosteam01@gmail.com');
    }
    elsif ($choice eq 'work-hos') {
        update_git_config('work-hos', 'Hossein Esmailzadeh', 'h.esmailzadeh@sinacomsys.com');
    }
    elsif ($choice eq 'work-pj') {
        update_git_config('work-pj', 'primejade', 'hosteam01@gmail.com');
    }
    else {
        print "Nothing has changed\n";
        exit 0;
    }
}

# Function to update git user config and set sshCommand if needed
sub update_git_config {
    my ($choice, $username, $email) = @_;

    print "Choice: $choice\n";
    print "Username: $username\n";
    print "Email: $email\n";

    if ($choice eq 'work-pj' || $choice eq 'pers-pj') {
        system('git', 'config', 'core.sshCommand', 'ssh -i ~/.ssh/id_ed25520');
    }

    system('git', 'config', 'user.name', $username);
    system('git', 'config', 'user.email', $email);
    printf "gs: git user set: %s\n", $choice;
}

# Function to capture the user's selection from fzf
sub capture_fzf_selection {
    my ($options_ref, $header) = @_;
    my $options = join("\n", @$options_ref);

    my $choice = qx($runner $args --header '$header' <<< "$options");

    chomp($choice);  # Remove any trailing newline
    return $choice;
}

# Main function to display options (optional, depending on use case)
sub main {
    my @options = qw(hos pj);
    my $choice = capture_fzf_selection(\@options, 'git options');
    print "$choice\n";
}

# Run the set_user function to initialize the user setup
set_user();
