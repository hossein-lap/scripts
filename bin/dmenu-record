#!/bin/bash
#  ____     _ 
# |  _ \   | |
# | |_) |  | |
# |  __/ |_| |
# |_|   \___/ 
#             

# set -e

# variables {{{
runner="ffmpeg"
search="ffmpeg"
ffmpegcount=$(pgrep -c ${search})
# ScriptName=$(echo $0 | awk -F '/' '{print $NF;}')
ScriptName='record'
patched=$(dmenu -v | grep -c 'hos-patched')
if [ ${patched} -eq 1 ]; then
	patches="-c -bw 2 -g 1 -r"
fi
dmenu="dmenu \
		-i \
		-l 5 \
		-p ${ScriptName} \
		${patches} \
		${@} \
		"
# ScriptName="ffmpeg"
Extention="mp4"
AudioCodec="aac"
FrameRate="30"
# VideoCodec="h264"
VideoCodec="libx265"
Directory="${HOME}/videos/screen-record"
BaseName="record-$(date +%y%m%d_%H%M%S)"
# }}}
# sent notification {{{
notify() {
	case $2 in
		1)
			mode=low
			;;
		2)
			mode=normal
			;;
		3)
			mode=critical
			;;
		*)
			mode=normal
			;;
	esac

	notify-send -a ${ScriptName} -u $mode "${1}"
}
# }}}

# Kill {{{
stop_record () {
	pid=$(pgrep ${search})
	thesig=$(printf '%s\n' \
		"2   SIGINT   Interrupt  Terminate" \
		"3   SIGQUIT  Quit       Terminate with core dump" \
		"9   SIGKILL  Kill       Forced termination" \
		"15  SIGTERM  Terminate  Terminate" \
		| ${dmenu} -l 10 -p 'signal' \
		| awk '{print $1;}')
	
	if [ -z "${thesig}" ]; then
		kill="kill -s 15"
	else
		kill="kill -s $thesig"
#		notify "$kill"
	fi

	if [ -z "${pid}" ]; then
		notify "Record canceled" 1
		exit 2
	else
		$kill "${pid}"
	fi
}
# }}}
# whole screen {{{
record_screen () {
	if [ ! -d "${Directory}" ]; then
		mkdir -p "${Directory}"
	fi

	DemResTmp=$(xdpyinfo | grep dimensions | awk '{print $2;}')

	split_choice=$(printf '%s\n' '↓' '↑' '↕' '→' \
		| ${dmenu} -p 'Monitor' -l 2 -g 2)
	if [ -z "${split_choice}" ]; then
		notify "Record canceled" 1
		exit 0
	fi

	case ${split_choice} in
		↓)
			DemResX=$(echo "${DemResTmp}" | sed 's/x.*//')
			DemResY=$(echo "${DemResTmp}" | sed -e 's/.*x//' -e 's/$/ \/ 2/' | bc)

			DemRes="${DemResX}x${DemResY}"
			Monitor=":0.0+0,1080"
			;;
		↑)
			DemResX=$(echo "${DemResTmp}" | sed 's/x.*//')
			DemResY=$(echo "${DemResTmp}" | sed -e 's/.*x//' -e 's/$/ \/ 2/' | bc)

			DemRes="${DemResX}x${DemResY}"
			Monitor=":0.0+0,0"
			;;
		↕)
			DemRes="${DemResTmp}"
			Monitor=":0.0"
			;;
		*)
			notify "Record canceled" 1; exit 119 ;;
	esac

#	echo "${DemResTmp}"
#	echo "${DemRes}"
#	echo "${Monitor}"
#	exit 99

	case ${WithAudio} in
	mic)
		${runner} \
			-f x11grab \
			-framerate ${FrameRate} \
			-s ${DemRes} \
			-i ${Monitor} \
			-r ${FrameRate} \
			-use_wallclock_as_timestamps 1 \
			-f alsa -thread_queue_size 1024 -i default \
			-c:v ${VideoCodec} \
			-crf 0 -preset ultrafast -c:a ${AudioCodec} \
			-pix_fmt yuv420p \
			"${Directory}/${BaseName}${Name}-${DemRes}-${AudioCodec}-${VideoCodec}.${Extention}"
		;;
	sys)
		PaDevOut=$(pactl list short sources \
			| awk '{print $2;}' \
			| grep output)
		${runner} \
			-f x11grab \
			-framerate ${FrameRate} \
			-s ${DemRes} \
			-i ${Monitor} \
			-f pulse \
			-i "${PaDevOut}" \
			-ac 2 \
			-acodec ${AudioCodec} \
			-vcodec ${VideoCodec} \
			-pix_fmt yuv420p \
			-r ${FrameRate} \
			"${Directory}/${BaseName}${Name}-${DemRes}-${AudioCodec}-${VideoCodec}.${Extention}"
		;;
	none)
		${runner} \
			-f x11grab \
			-framerate ${FrameRate} \
			-s ${DemRes} \
			-i ${Monitor} \
			-r ${FrameRate} \
			-vcodec ${VideoCodec} \
			-pix_fmt yuv420p \
			"${Directory}/${BaseName}${Name}-${DemRes}-${VideoCodec}.${Extention}"
		;;
	*) notify "Record canceled" 1; exit 174;;
	esac
}
# }}}
# active window {{{
record_act_window () {
	if [ ! -d "${Directory}" ]; then
		mkdir -p "${Directory}"
	fi
	
	DemRes=$(xwininfo -id $(xdotool getactivewindow))
	# OutRes=$(xdpyinfo | grep dimensions | awk '{print $2;}')
	PaDevOut=$(pactl list short sources | awk '{print $2;}' | grep output)
	PaDevIn=$(pactl list short sources | awk '{print $2;}' | grep input)
	
	xwininfo -id $(xdotool getactivewindow) | {
	while IFS=: read -r k v; do
		case "$k" in
		*"Absolute upper-left X"*) x=$v;;
		*"Absolute upper-left Y"*) y=$v;;
		*"Border width"*) bw=$v ;;
		*"Width"*) w=$v;;
		*"Height"*) h=$v;;
		esac
	done
	DemGap="+$(expr $x + $bw),$(expr $y + $bw | tr -d ' ')"
	DemRes="$(echo "${w}x${h}" | tr -d ' ')"

	case ${WithAudio} in
		mic)
		${runner} -y -f x11grab \
				-framerate ${FrameRate} \
				-video_size "${DemRes}" \
				-i "${DemGap}" \
				-r ${FrameRate} \
				-use_wallclock_as_timestamps 1 \
				-f alsa -thread_queue_size 1024 -i default \
				-c:v ${VideoCodec} \
				-crf 0 -preset ultrafast -c:a ${AudioCodec} \
				-pix_fmt yuv420p \
				"${Directory}/${BaseName}${Name}-${DemRes}-${AudioCodec}-${VideoCodec}.${Extention}"
		;;
		sys)
		${runner} -y -f x11grab \
				-framerate ${FrameRate} \
				-video_size "${DemRes}" \
				-i "${DemGap}" \
				-r ${FrameRate} \
				-f pulse \
				-i "${PaDevOut}" \
				-ac 2 \
				-vcodec ${VideoCodec} \
				-acodec ${AudioCodec} \
				-pix_fmt yuv420p \
				"${Directory}/${BaseName}${Name}-${DemRes}-${AudioCodec}-${VideoCodec}.${Extention}"
		;;
		none)
		${runner} -y -f x11grab \
				-framerate ${FrameRate} \
				-video_size "${DemRes}" \
				-i "${DemGap}" \
				-r ${FrameRate} \
				-vcodec ${VideoCodec} \
				-pix_fmt yuv420p \
				"${Directory}/${BaseName}${Name}-${DemRes}-${VideoCodec}.${Extention}"
		;;
		*) notify "Record canceled" 1; exit 243;;
	esac
	}
}
# }}}
# select window {{{
record_sel_window () {
	if [ ! -d "${Directory}" ]; then
		mkdir -p "${Directory}"
	fi

	WinId=$(xdotool selectwindow getwindowgeometry --shell \
		| awk -F '=' '/WINDOW/ {print $NF;}')
	# OutRes=$(xdpyinfo | awk '/dimensions/ {print $2;}')
	PaDevOut=$(pactl list short sources | awk '{print $2;}' | grep output)
	PaDevIn=$(pactl list short sources | awk '{print $2;}' | grep input)
	
	xwininfo -id ${WinId} | {
	while IFS=: read -r k v; do
		case "$k" in
		*"Absolute upper-left X"*) x=$v;;
		*"Absolute upper-left Y"*) y=$v;;
		*"Border width"*) bw=$v ;;
		*"Width"*) w=$v;;
		*"Height"*) h=$v;;
		esac
	done
	DemGap="+$(expr $x + $bw),$(expr $y + $bw | tr -d ' ')"
	DemRes="$(echo "${w}x${h}" | tr -d ' ')"

	echo "${DemRes} --- ${DemGap}"
	# exit 2

	case ${WithAudio} in
		mic)
		${runner} -y -f x11grab \
				-framerate ${FrameRate} \
				-video_size "${DemRes}" \
				-i "${DemGap}" \
				-r ${FrameRate} \
				-use_wallclock_as_timestamps 1 \
				-f alsa -thread_queue_size 1024 -i default \
				-c:v ${VideoCodec} \
				-crf 0 -preset ultrafast -c:a ${AudioCodec} \
				-pix_fmt yuv420p \
				"${Directory}/${BaseName}${Name}-${DemRes}-${AudioCodec}-${VideoCodec}.${Extention}"
		;;
		sys)
		${runner} -y -f x11grab \
				-framerate ${FrameRate} \
				-video_size "${DemRes}" \
				-r ${FrameRate} \
				-i "${DemGap}" \
				-f pulse \
				-i "${PaDevOut}" \
				-ac 2 \
				-c:v ${VideoCodec} \
				-crf 0 -preset ultrafast -c:a ${AudioCodec} \
				-pix_fmt yuv420p \
				"${Directory}/${BaseName}${Name}-${DemRes}-${AudioCodec}-${VideoCodec}.${Extention}"
		;;
		none)
		${runner} -y -f x11grab \
				-framerate ${FrameRate} \
				-video_size "${DemRes}" \
				-i "${DemGap}" \
				-r ${FrameRate} \
				-c:v ${VideoCodec} \
				-pix_fmt yuv420p \
				"${Directory}/${BaseName}${Name}-${DemRes}-${VideoCodec}.${Extention}"
		;;
		*) notify "Record canceled" 1; exit 317;;
	esac
	}
}
# }}}
# Help {{{
help () {
	printf '%s\n' "$0" "Record screen/window" \
		"   using ${runner}" \
	| ${dmenu} -p 'Help'
}
# }}}

# main {{{
choice=$(printf '%s\n' \
	"Whole screen" \
	"Active window" \
	"Select window" \
	"Help" \
	"Stop" \
	| ${dmenu} | awk '{print $1;}')

case ${choice} in
	[sS]elect|[wW]hole|[aA]ctive)
		WithAudio=$(printf '%s\n' "none" "mic" "sys" \
			| ${dmenu} -p 'Audio?')

		if [ -z ${WithAudio} ]; then
			notify "Record canceled"; exit 345
		fi

		InputName="$(${dmenu} -p 'File name:' < /dev/null | sed 's/[ -]/_/g')"

		if [ -z "${InputName}" ]; then
			Name=""
		else
			Name="-${InputName}"
		fi
	;;
esac

case ${choice} in
	[sS]elect) record_sel_window
	;;
	[aA]ctive) record_act_window
	;;
	[wW]hole) record_screen
	;;
	[sS]top) stop_record
	;;
	[hH]elp) help
	;;
	*)
		notify "Record canceled" 1: exit 371
	;;
esac
# }}}
